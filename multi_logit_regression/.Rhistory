),
data=list(y=y) , start=list(alpha=0,sigma=1) , chains=2 , iter=4000 , warmup=1000 )
precis(m8.2)
plot(m8.2)
m8.3 <- map2stan(
alist(
y ~ dnorm( mu , sigma ) ,
mu <- alpha ,
alpha ~ dnorm( 1 , 10 ) ,
sigma ~ dcauchy( 0 , 1 )
),
data=list(y=y) , start=list(alpha=0,sigma=1) , chains=2 , iter=4000 , warmup=1000 )
precis(m8.3)
y <- rcauchy(1e4,0,5)
mu <- sapply( 1:length(y) , function(i) sum(y[1:i])/i )
plot(mu,type="l")
y <- rcauchy(1e4,0,5)
mu <- sapply( 1:length(y) , function(i) sum(y[1:i])/i )
plot(mu,type="l")
y <- rcauchy(1e4,0,5)
mu <- sapply( 1:length(y) , function(i) sum(y[1:i])/i )
plot(mu,type="l")
y <- rnorm( 100 , mean=0 , sd=1 )
y
m8.4 <- map2stan(
alist(
y ~ dnorm( mu , sigma ) ,
mu <- a1 + a2 ,
sigma ~ dcauchy( 0 , 1 )
),
data=list(y=y) , start=list(a1=0,a2=0,sigma=1) , chains=2 , iter=4000 , warmup=1000 )
precis(m8.4)
m8.5 <- map2stan(
alist(
y ~ dnorm( mu , sigma ) ,
mu <- a1 + a2 ,
a1 ~ dnorm( 0 , 10 ) ,
a2 ~ dnorm( 0 , 10 ) ,
sigma ~ dcauchy( 0 , 1 )
),
data=list(y=y) , start=list(a1=0,a2=0,sigma=1) , chains=2 , iter=4000 , warmup=1000 )
precis(m8.5)
p <- list()
p$A <- c(0,0,10,0,0)
p$B <- c(0,1,8,1,0)
p$C <- c(0,2,6,2,0)
p$D <- c(1,2,4,2,1)
p$E <- c(2,2,2,2,2)
p_norm <- lapply( p , function(q) q/sum(q))
p
p_norm <- lapply( p , function(q) q/sum(q))
p_norm
( H <- sapply( p_norm , function(q) -sum(ifelse(q==0,0,q*log(q))) ) )
p
pnorm
p_norm
sum(p$A)
p$A
p_norm
log(113400)
log(113400)/10
ways <- c(1,90,1260,37800,113400)
logwayspp <- log(ways)/10
ways
p <- list()
p[[1]] <- c(1/4,1/4,1/4,1/4)
p[[2]] <- c(2/6,1/6,1/6,2/6)
p[[3]] <- c(1/6,2/6,2/6,1/6)
p[[4]] <- c(1/8,4/8,2/8,1/8)
sapply( p , function(p) sum(p*c(0,1,1,2)) )
library(rethinking)
data(chimpanzees)
d <- chimpanzees
?chimpanzees
?chimpanzees
library(cranlogs)
library(dplyr)
DLs <- cran_downloads(
packages = c("edstan",rstan", "rstanarm", "bayesplot", "loo", "shinystan", "rstantools", "brms"),
from = "2017-10-23",
to = "2018-10-23"
)
DLs %>%
group_by(package) %>%
summarize(total = sum(count))
library(cranlogs)
library(dplyr)
DLs <- cran_downloads(
packages = c("edstan","rstan", "rstanarm", "bayesplot", "loo", "shinystan", "rstantools", "brms"),
from = "2017-10-23",
to = "2018-10-23"
)
DLs %>%
group_by(package) %>%
summarize(total = sum(count))
DLs <- cran_downloads(
packages = c("edstan")
# ,"rstan", "rstanarm", "bayesplot", "loo", "shinystan", "rstantools", "brms"),
from = "2015-10-23",
to = "2018-10-23"
)
DLs %>%
group_by(package) %>%
summarize(total = sum(count))
install.packages("hBayesDM‚Äù, dependencies=TRUE)
)
)
;
adsft34q---2
))))
;
""
``
knitr::include_graphics("./img/change-point-posterior.pdf", auto_pdf = FALSE)
knitr::include_graphics("./img/change-point-posterior.png", auto_pdf = TRUE)
knitr::include_graphics("./img/change-point-posterior.png", auto_pdf = TRUE)
library("cmdstanr")
#========== from https://www.r-bloggers.com/prototyping-multinomial-logit-with-r/
data(iris)
### method 1: nnet package ###
library(nnet)
mdl1 <- multinom(Species ~ Sepal.Length, data = iris, model = TRUE)
summary(mdl1)
#========Stan version
N <- nrow(iris)
D <- 1 # number of predictors
K <- 3 # number of categories
x_matrix <- matrix(ncol=D,nrow=N)
x_matrix[,1] <- iris$Sepal.Length
#map setosa=1, versicolor=2, virgnica=3
y = ifelse(iris$Species=="setosa",1,ifelse(iris$Species=="versicolor",2,3))
data_0 <- list(D=D, N=N, K=K, x=x_matrix[,1], y=y)
data_0 <- list(D=D, N=N, K=K, x=x_matrix[,1], y=y)
model_0 <- cmdstan_model("multi_logit_regression_dummy.stan")
setwd("~/git/docs/src/stan-users-guide/example_code/multi_logit_regression")
model_0 <- cmdstan_model("multi_logit_regression_dummy.stan")
rstan:::rstudio_stanc("multi_logit_regression_dummy.stan")
fit_0 <- model_0$sample(data = data_0,
output_dir = "output")
data_0 <- list(D=D, N=N, K=K, x=x_matrix, y=y)
fit_0 <- model_0$sample(data = data_0,
output_dir = "output")
rstan:::rstudio_stanc("multi_logit_regression_dummy.stan")
model_0 <- cmdstan_model("multi_logit_regression_dummy.stan")
fit_0 <- model_0$sample(data = data_0,
output_dir = "output")
rstan:::rstudio_stanc("multi_logit_regression_dummy.stan")
model_0 <- cmdstan_model("multi_logit_regression_dummy.stan")
fit_0 <- model_0$sample(data = data_0,
output_dir = "output")
rstan:::rstudio_stanc("multi_logit_regression_dummy.stan")
rstan:::rstudio_stanc("multi_logit_regression_dummy.stan")
rstan:::rstudio_stanc("multi_logit_regression_dummy.stan")
rstan:::rstudio_stanc("multi_logit_regression_dummy.stan")
rstan:::rstudio_stanc("multi_logit_regression_dummy.stan")
model_0 <- cmdstan_model("multi_logit_regression_dummy.stan")
fit_0 <- model_0$sample(data = data_0,
output_dir = "output")
print(fit_0$summary())
model_0 <- cmdstan_model("multi_logit_regression_dummy.stan")
fit_0 <- model_0$sample(data = data_0,
output_dir = "output")
print(fit_0$summary())
model_0 <- cmdstan_model("multi_logit_regression_dummy.stan")
fit_0 <- model_0$sample(data = data_0,
output_dir = "output")
rstan:::rstudio_stanc("multi_logit_regression_dummy.stan")
model_0 <- cmdstan_model("multi_logit_regression_dummy.stan")
fit_0 <- model_0$sample(data = data_0,
output_dir = "output")
model_0 <- cmdstan_model("multi_logit_regression_dummy.stan")
fit_0 <- model_0$sample(data = data_0,
output_dir = "output")
model_0 <- cmdstan_model("multi_logit_regression_dummy.stan")
output_dir = "output")
fit_0 <- model_0$sample(data = data_0,
output_dir = "output")
model_0 <- cmdstan_model("multi_logit_regression_dummy.stan")
fit_0 <- model_0$sample(data = data_0,
output_dir = "output")
print(fit_0$summary())
rstan:::rstudio_stanc("multi_logit_regression_dummy.stan")
model_0 <- cmdstan_model("multi_logit_regression_dummy.stan")
fit_0 <- model_0$sample(data = data_0,
output_dir = "output")
print(fit_0$summary())
summary(mdl1)
#========Stan version
N <- nrow(iris)
D <- 1 # number of predictors
K <- 3 # number of categories
x_matrix <- matrix(ncol=D,nrow=N)
x_matrix[,1] <- iris$Sepal.Length
#map setosa=1, versicolor=2, virgnica=3
y = ifelse(iris$Species=="setosa",1,ifelse(iris$Species=="versicolor",2,3))
data_0 <- list(D=D, N=N, K=K, x=x_matrix, y=y)
model_0 <- cmdstan_model("multi_logit_regression_dummy.stan")
rstan:::rstudio_stanc("multi_logit_regression_dummy.stan")
rstan:::rstudio_stanc("multi_logit_regression_dummy.stan")
rstan:::rstudio_stanc("multi_logit_regression_dummy.stan")
rstan:::rstudio_stanc("multi_logit_regression_dummy.stan")
rstan:::rstudio_stanc("multi_logit_regression_dummy.stan")
model_0 <- cmdstan_model("multi_logit_regression_dummy.stan")
fit_0 <- model_0$sample(data = data_0,
output_dir = "output")
print(fit_0$summary())
plot(x_matrix[,1],y)
exp(-.04*4.5)/(1 + exp(-.04*4.5))
exp(-.015*4.5)/(1 + exp(-.015*4.5))
exp(-.04*8)/(1 + exp(-.04*8))
1/(1 + exp(-.04*8))
1/(1 + exp(-.04*4))
summary(mdl1)
#setosa
pr_setosa <- 1/(1+exp(-26.0 + 4.8*sepal) + exp(-38.7 + 6.847957*sepal))
sepal = 8.0
#setosa
pr_setosa <- 1/(1+exp(-26.0 + 4.8*sepal) + exp(-38.7 + 6.847957*sepal))
new_data = data.frame(x=c(4.5,6,8))
predict(mdl1,newdata=new_data)
new_data = data.frame(Sepal.Length=c(4.5,6,8))
predict(mdl1,newdata=new_data)
predict(mdl1,newdata=new_data)
new_data = data.frame(Sepal.Length=c(4.5,6,8,4))
predict(mdl1,newdata=new_data)
predict(mdl1,type=probs,newdata=new_data)
predict(mdl1,type="probs",newdata=new_data)
predictions <- predict(mdl1,type="probs",newdata=new_data)
sum(predictions[1])
sum(predictions[2])
sum(predictions[3])
predictions[3]
predictions[3,]
sum(predictions[3,])
sum(predictions[1,])
predictions[1,]
softmax(predictions)
library(mda)
install.packages("mda")
library(mda)
softmax(c(1,4,5))
softmax(predictions)
predictions
softmax(predictions[1,])
softmax(predictions[1,1:3])
softmax(predictions[1:2,])
softmax(predictions[1,])
softmax(predictions[1:1,])
numerator <- exp(8*4.8 + -26.08339) + exp(8*6.8 + -26.08339) + exp(0)
numerator
numerator <- exp(8*4.8 + -26.08339) + exp(8*6.8 + -26.08339) + exp(0)
sepal <- exp(0)/numerator
sepal
sepal_p <- exp(0)/numerator
versicolor_p <- exp(8*6.8 + -26.08339)/numerator
virginica_p <- exp(8*4.8 + -26.08339)
sum(c(sepal_p,versicolor_p,virginica_p)
)
virginica_p <- exp(8*4.8 + -26.08339)/numerator
sum(c(sepal_p,versicolor_p,virginica_p))
max(c(sepal_p,versicolor_p,virginica_p))
val <- 4
numerator <- exp(val*4.8 + -26.08339) + exp(val*6.8 + -26.08339) + exp(0)
sepal_p <- exp(0)/numerator
versicolor_p <- exp(val*6.8 + -26.08339)/numerator
virginica_p <- exp(val*4.8 + -26.08339)/numerator
max(c(sepal_p,versicolor_p,virginica_p))
numerator <- exp(val*4.8 + -26.08339) + exp(val*6.8 + -38.76786) + exp(0)
sepal_p <- exp(0)/numerator
val <- 4
numerator <- exp(val*4.8 + -26.08339) + exp(val*6.8 + -38.76786) + exp(0)
sepal_p <- exp(0)/numerator
versicolor_p <- exp(val*6.8 + -26.08339)/numerator
virginica_p <- exp(val*4.8 + -38.76786)/numerator
val <- 4.5
numerator <- exp(val*4.8 + -26.08339) + exp(val*6.8 + -38.76786) + exp(0)
sepal_p <- exp(0)/numerator
versicolor_p <- exp(val*6.8 + -26.08339)/numerator
virginica_p <- exp(val*4.8 + -38.76786)/numerator
predictions
setosa_p <- exp(0)/numerator
val <- 4.5
numerator <- exp(val*4.8 + -26.08339) + exp(val*6.8 + -38.76786) + exp(0)
setosa_p <- exp(0)/numerator
versicolor_p <- exp(val*6.8 + -26.08339)/numerator
virginica_p <- exp(val*4.8 + -38.76786)/numerator
sum(c(setosa_p,versicolor_p,virginica_p))
val <- 4.5
versicolor_v <- -26.08339 + 4.816072*val
virginica_v <- -38.76786 + 6.847957*val
setosa_v <- 0
numerator <- exp(versicolor_v) + exp(virginica_v) + exp(0)
setosa_p <- exp(setosa_v)/numerator
versicolor_p <- exp(versicolor_v)/numerator
virginica_p <- exp(virginica_v)/numerator
sum(c(setosa_p,versicolor_p,virginica_p))
max(c(setosa_p,versicolor_p,virginica_p))
predictions
val <- 6
versicolor_v <- -26.08339 + 4.816072*val
virginica_v <- -38.76786 + 6.847957*val
setosa_v <- 0
numerator <- exp(versicolor_v) + exp(virginica_v) + exp(0)
setosa_p <- exp(setosa_v)/numerator
versicolor_p <- exp(versicolor_v)/numerator
virginica_p <- exp(virginica_v)/numerator
max(c(setosa_p,versicolor_p,virginica_p))
rstan:::rstudio_stanc("multi_logit_regression_dummy.stan")
rstan:::rstudio_stanc("multi_logit_regression_dummy.stan")
rstan:::rstudio_stanc("multi_logit_regression_dummy.stan")
rstan:::rstudio_stanc("multi_logit_regression_dummy.stan")
rstan:::rstudio_stanc("multi_logit_regression_dummy.stan")
rstan:::rstudio_stanc("multi_logit_regression_dummy.stan")
rstan:::rstudio_stanc("multi_logit_regression_dummy.stan")
model_0 <- cmdstan_model("multi_logit_regression_dummy.stan")
fit_0 <- model_0$sample(data = data_0,
output_dir = "output")
print(fit_0$summary())
val <- 6
setosa_v <- .03 + 2.8*val
val <- 6
setosa_v <- -.03 + 2.8*val
versicolor_v <- -.05 + 2.8*val
val <- 6
setosa_v <- -.03 + 3.2*val
versicolor_v <- -.05 + 2.8*val
virginica_v <- 0
numerator <- exp(versicolor_v) + exp(virginica_v) + exp(setosa_v)
setosa_p <- exp(setosa_v)/numerator
versicolor_p <- exp(versicolor_v)/numerator
virginica_p <- exp(virginica_v)/numerator
max(c(setosa_p,versicolor_p,virginica_p))
val <- 6
versicolor_v <- -26.08339 + 4.816072*val
virginica_v <- -38.76786 + 6.847957*val
setosa_v <- 0
numerator <- exp(versicolor_v) + exp(virginica_v) + exp(setosa_v)
setosa_p <- exp(setosa_v)/numerator
versicolor_p <- exp(versicolor_v)/numerator
virginica_p <- exp(virginica_v)/numerator
max(c(setosa_p,versicolor_p,virginica_p))
rstan:::rstudio_stanc("multi_logit_regression_dummy.stan")
rstan:::rstudio_stanc("multi_logit_regression_dummy.stan")
model_0 <- cmdstan_model("multi_logit_regression_dummy.stan")
fit_0 <- model_0$sample(data = data_0,
output_dir = "output")
rstan:::rstudio_stanc("multi_logit_regression_dummy.stan")
model_0 <- cmdstan_model("multi_logit_regression_dummy.stan")
fit_0 <- model_0$sample(data = data_0,
output_dir = "output")
print(fit_0$summary())
rstan:::rstudio_stanc("one_pred_multi_logit_regression_dummy.stan")
rstan:::rstudio_stanc("one_pred_multi_logit_regression_dummy.stan")
rstan:::rstudio_stanc("one_pred_multi_logit_regression_dummy.stan")
rstan:::rstudio_stanc("one_pred_multi_logit_regression_dummy.stan")
rstan:::rstudio_stanc("one_pred_multi_logit_regression_dummy.stan")
rstan:::rstudio_stanc("one_pred_multi_logit_regression_dummy.stan")
model_0 <- cmdstan_model("one_pred_multi_logit_regression_dummy.stan")
model_0 <- cmdstan_model("one_pred_multi_logit_regression_dummy.stan")
model_0 <- cmdstan_model("one_pred_multi_logit_regression_dummy.stan")
rstan:::rstudio_stanc("one_pred_multi_logit_regression_dummy.stan")
rstan:::rstudio_stanc("one_pred_multi_logit_regression_dummy.stan")
library("cmdstanr")
#========== from https://www.r-bloggers.com/prototyping-multinomial-logit-with-r/
data(iris)
### method 1: nnet package ###
library(nnet)
mdl1 <- multinom(Species ~ Sepal.Length, data = iris, model = TRUE)
summary(mdl1)
#========Stan version
N <- nrow(iris)
D <- 1 # number of predictors
K <- 3 # number of categories
x_matrix <- matrix(ncol=D,nrow=N)
x_matrix[,1] <- iris$Sepal.Length
#map setosa=1, versicolor=2, virgnica=3
y = ifelse(iris$Species=="setosa",1,ifelse(iris$Species=="versicolor",2,3))
x_matrix <- matrix(ncol=D,nrow=N)
x_matrix[,1] <- iris$Sepal.Length
#map setosa=1, versicolor=2, virgnica=3
y = ifelse(iris$Species=="setosa",1,ifelse(iris$Species=="versicolor",2,3))
data_0 <- list(D=D, N=N, K=K, x=x_matrix[,1], y=y)
model_0 <- cmdstan_model("one_pred_multi_logit_regression_dummy.stan")
fit_0 <- model_0$sample(data = data_0,
output_dir = "output")
model_0 <- cmdstan_model("one_pred_multi_logit_regression_dummy.stan")
fit_0 <- model_0$sample(data = data_0,
output_dir = "output")
print(fit_0$summary())
model_0 <- cmdstan_model("multi_logit_regression_dummy.stan")
fit_0 <- model_0$sample(data = data_0,
output_dir = "output")
data_0 <- list(D=D, N=N, K=K, x=x_matrix, y=y)
model_0 <- cmdstan_model("multi_logit_regression_dummy.stan")
fit_0 <- model_0$sample(data = data_0,
output_dir = "output")
print(fit_0$summary())
data_0 <- list(D=D, N=N, K=K, x=x_matrix[,1], y=y)
model_0 <- cmdstan_model("one_pred_multi_logit_regression_dummy.stan")
fit_0 <- model_0$sample(data = data_0,
output_dir = "output")
print(fit_0$summary())
### method 1: nnet package ###
library(nnet)
mdl1 <- multinom(Species ~ Sepal.Length, data = iris, model = TRUE)
summary(mdl1)
summary(mdl1)
fit_0 <- model_0$sample(data = data_0,
output_dir = "output")
print(fit_0$summary())
data_1 <- list(D=D, N=N, K=K, x=x_matrix, y=y)
model_1 <- cmdstan_model("multi_logit_regression_dummy.stan")
fit_1 <- model_1$sample(data = data_0,
output_dir = "output")
data_1 <- list(D=D, N=N, K=K, x=x_matrix, y=y)
model_1 <- cmdstan_model("multi_logit_regression_dummy.stan")
fit_1 <- model_1$sample(data = data_1,
output_dir = "output")
print(fit_1$summary())
model_1 <- cmdstan_model("multi_logit_regression_dummy.stan")
fit_1 <- model_1$sample(data = data_1,
output_dir = "output")
print(fit_1$summary())
rstan:::rstudio_stanc("multi_logit_regression_dummy.stan")
rstan:::rstudio_stanc("multi_logit_regression_dummy.stan")
rstan:::rstudio_stanc("multi_logit_regression_dummy.stan")
rstan:::rstudio_stanc("multi_logit_regression_dummy.stan")
rstan:::rstudio_stanc("multi_logit_regression_dummy.stan")
rstan:::rstudio_stanc("multi_logit_regression_dummy.stan")
rstan:::rstudio_stanc("multi_logit_regression_dummy.stan")
rstan:::rstudio_stanc("multi_logit_regression_dummy.stan")
model_1 <- cmdstan_model("multi_logit_regression_dummy.stan")
fit_1 <- model_1$sample(data = data_1,
output_dir = "output")
print(fit_1$summary())
model_1 <- cmdstan_model("multi_logit_regression_dummy.stan")
fit_1 <- model_1$sample(data = data_1,
output_dir = "output")
print(fit_1$summary())
rstan:::rstudio_stanc("multi_logit_regression_dummy.stan")
rstan:::rstudio_stanc("multi_logit_regression_dummy.stan")
model_1 <- cmdstan_model("multi_logit_regression_dummy.stan")
fit_1 <- model_1$sample(data = data_1,
output_dir = "output")
print(fit_1$summary())
rstan:::rstudio_stanc("multi_logit_regression_dummy.stan")
rstan:::rstudio_stanc("multi_logit_regression_dummy.stan")
rstan:::rstudio_stanc("multi_logit_regression_dummy.stan")
model_1 <- cmdstan_model("multi_logit_regression_dummy.stan")
model_2 <- cmdstan_model("multi_logit_regression.stan")
fit_2 <- model_1$sample(data = data_1,
output_dir = "output")
print(fit_2$summary())
fit_2 <- model_2$sample(data = data_1,
output_dir = "output")
print(fit_2$summary())
one_hot <- matrix(ncol=K, nrow=N)
one_hot[, 2] <- ifelse(iris$Species=="versicolor",1,0) # predictor values
one_hot[, 3] <- ifelse(iris$Species=="virginica",1,0) # predictor values
one_hot[, 1] <- ifelse(iris$Species=="setosa",1,0) # predictor values
one_hot
x_one_hot <- matrix(ncol=K + 1, nrow=N)
x_one_hot[, 2] <- ifelse(iris$Species=="versicolor",1,0) # predictor values
x_one_hot[, 3] <- ifelse(iris$Species=="virginica",1,0) # predictor values
x_one_hot[, 1] <- ifelse(iris$Species=="setosa",1,0) # predictor values
x_one_hot[, 4] <- iris$Sepal.Length
x_one_hot
rstan:::rstudio_stanc("multi_logit_regression_dummy_explicit_intercept.stan")
data_one_hot <- list(D=K+1, N=N, K=K, x=x_one_hot, y=y)
model_2 <- cmdstan_model("multi_logit_regression_dummy.stan")
rstan:::rstudio_stanc("multi_logit_regression_dummy_explicit_intercept.stan")
data_1 <- list(D=D, N=N, K=K, x=x_matrix, y=y)
model_1 <- cmdstan_model("multi_logit_regression_dummy_explicit.stan")
setwd("~/git/docs/src/stan-users-guide/example_code/multi_logit_regression")
model_1 <- cmdstan_model("multi_logit_regression_dummy_explicit_intercept.stan")
fit_1 <- model_1$sample(data = data_1,
output_dir = "output")
print(fit_1$summary())
x_one_hot <- matrix(ncol=K + 1, nrow=N)
x_one_hot[, 2] <- ifelse(iris$Species=="versicolor",1,0) # predictor values
x_one_hot[, 3] <- ifelse(iris$Species=="virginica",1,0) # predictor values
x_one_hot[, 1] <- ifelse(iris$Species=="setosa",1,0) # predictor values
x_one_hot[, 4] <- iris$Sepal.Length
data_one_hot <- list(D=K+1, N=N, K=K, x=x_one_hot, y=y)
model_2 <- cmdstan_model("multi_logit_regression_dummy.stan")
rstan:::rstudio_stanc("multi_logit_regression_dummy.stan")
model_2 <- cmdstan_model("multi_logit_regression_dummy.stan")
fit_2 <- model_2$sample(data = data_1,
output_dir = "output")
print(fit_2$summary())
rstan:::rstudio_stanc("multi_logit_regression_dummy.stan")
rstan:::rstudio_stanc("multi_logit_regression_dummy.stan")
model_2 <- cmdstan_model("multi_logit_regression_dummy.stan")
fit_2 <- model_2$sample(data = data_1,
output_dir = "output")
rstan:::rstudio_stanc("multi_logit_regression_dummy.stan")
rstan:::rstudio_stanc("multi_logit_regression_dummy.stan")
model_2 <- cmdstan_model("multi_logit_regression_dummy.stan")
fit_2 <- model_2$sample(data = data_1,
output_dir = "output")
fit_2 <- model_2$sample(data = data_one_hot,
output_dir = "output")
rstan:::rstudio_stanc("multi_logit_regression_dummy.stan")
model_2 <- cmdstan_model("multi_logit_regression_dummy.stan")
fit_2 <- model_2$sample(data = data_one_hot,
output_dir = "output")
rstan:::rstudio_stanc("multi_logit_regression_dummy.stan")
model_2 <- cmdstan_model("multi_logit_regression_dummy.stan")
fit_2 <- model_2$sample(data = data_one_hot,
output_dir = "output")
print(fit_2$summary())
K+1
